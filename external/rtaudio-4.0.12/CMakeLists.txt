SET(RTAUDIO_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "Include directories for RtAudio")
SET(RTAUDIO_LIBRARIES CACHE INTERNAL "Libraries for RtAudio" FORCE)
SET(AUDIO_SYSTEMS)
SET(ASIO_SOURCES)

IF(WIN32)
  SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __WINDOWS_DS__)
  SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} ${CMAKE_CURRENT_SOURCE_DIR}/lib/dsound.lib CACHE INTERNAL "Libraries for RtAudio")
  SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __WINDOWS_ASIO__)
  SET(ASIO_SOURCES include/asiodrivers.cpp include/asiolist.cpp include/asio.cpp)
ELSEIF(APPLE)
  FIND_LIBRARY(COREAUDIO_LIBRARY CoreAudio)
  FIND_LIBRARY(COREFOUNDATION_LIBRARY CoreFoundation)
  SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} ${COREAUDIO_LIBRARY} ${COREFOUNDATION_LIBRARY} pthread CACHE INTERNAL "Libraries for RtAudio")
  SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __MACOSX_CORE__)
ELSEIF(UNIX)
  #FIND_PACKAGE(ALSA)
  IF(ALSA_FOUND)
    SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __LINUX_ALSA__)
    SET(RTAUDIO_INCLUDE_DIRS ${RTAUDIO_INCLUDE_DIRS} ${ALSA_INCLUDE_DIRS} CACHE INTERNAL "Include directories for RtAudio")
    SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} ${ALSA_LIBRARIES} CACHE INTERNAL "Libraries for RtAudio")
  ENDIF()

  FIND_PACKAGE(Jack)
  IF(JACK_FOUND)
    SET(RTAUDIO_INCLUDE_DIRS ${RTAUDIO_INCLUDE_DIRS} ${JACK_INCLUDE_DIRS} CACHE INTERNAL "Include directories for RtAudio")
    SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} ${JACK_LIBRARIES} CACHE INTERNAL "Libraries for RtAudio")
    SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __UNIX_JACK__)
  ENDIF()

  #FIND_PACKAGE(OSS)
  IF(OSS_FOUND)
    SET(RTAUDIO_INCLUDE_DIRS ${RTAUDIO_INCLUDE_DIRS} ${OSS_INCLUDE_DIR} CACHE INTERNAL "Include directories for RtAudio")
    SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __LINUX_OSS__)
  ENDIF()

  SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} pthread CACHE INTERNAL "Libraries for RtAudio")
ELSE()
  SET(AUDIO_SYSTEMS ${AUDIO_SYSTEMS} __RTAUDIO_DUMMY__)
ENDIF()

_MESSAGE("Configured audio system(s): " ${AUDIO_SYSTEMS})

FOREACH(AUDIO_SYSTEM ${AUDIO_SYSTEMS})
  ADD_DEFINITIONS(-D${AUDIO_SYSTEM})
ENDFOREACH()

INCLUDE_DIRECTORIES(include ${OSS_INCLUDE_DIR})

ADD_LIBRARY(rtaudio STATIC RtAudio.cpp SamplerateControl.cpp SamplerateAware.cpp ${ASIO_SOURCES})
SET(RTAUDIO_LIBRARIES ${RTAUDIO_LIBRARIES} rtaudio CACHE INTERNAL "Libraries for RtAudio")

_SUBDIRS(tests)
